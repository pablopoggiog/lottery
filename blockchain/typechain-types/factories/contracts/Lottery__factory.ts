/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Lottery, LotteryInterface } from "../../contracts/Lottery";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "LotteryReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PlayerEntered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WinnerPicked",
    type: "event",
  },
  {
    inputs: [],
    name: "enter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address payable[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pickWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003a60201b60201c565b61004260201b60201c565b6000600381905550610106565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61113d806101156000396000f3fe6080604052600436106100c25760003560e01c8063a2fb11751161007f578063e580f47b11610059578063e580f47b14610234578063e97dcb621461025f578063f2fde38b14610269578063f71d96cb14610292576100c2565b8063a2fb1175146101a1578063dbdff2c1146101de578063df15c37e14610209576100c2565b806312065fe0146100c75780635d495aea146100f2578063715018a6146101095780638b5b9ccc146101205780638da5cb5b1461014b578063900aafaf14610176575b600080fd5b3480156100d357600080fd5b506100dc6102cf565b6040516100e99190610aac565b60405180910390f35b3480156100fe57600080fd5b506101076102d7565b005b34801561011557600080fd5b5061011e6104eb565b005b34801561012c57600080fd5b506101356104ff565b6040516101429190610bb7565b60405180910390f35b34801561015757600080fd5b5061016061058d565b60405161016d9190610bfa565b60405180910390f35b34801561018257600080fd5b5061018b6105b6565b6040516101989190610aac565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c39190610c46565b6105c0565b6040516101d59190610bfa565b60405180910390f35b3480156101ea57600080fd5b506101f36105ff565b6040516102009190610aac565b60405180910390f35b34801561021557600080fd5b5061021e610639565b60405161022b9190610d31565b60405180910390f35b34801561024057600080fd5b506102496106c7565b6040516102569190610aac565b60405180910390f35b6102676106cd565b005b34801561027557600080fd5b50610290600480360381019061028b9190610d7f565b6107ca565b005b34801561029e57600080fd5b506102b960048036038101906102b49190610c46565b61084d565b6040516102c69190610dbb565b60405180910390f35b600047905090565b6102df61088c565b60006001805490506102ef6105ff565b6102f99190610e05565b905060006001828154811061031157610310610e36565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060004790508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610389573d6000803e3d6000fd5b506002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610403600160035461090a90919063ffffffff16565b6003819055508173ffffffffffffffffffffffffffffffffffffffff167f64791dbae5677392ba76761a5273633cec8f1d9d8cfe808da7bac6ef16a880be8260405161044f9190610aac565b60405180910390a26003547f6564d21026f38ac4bc4ef082b01864f3ae6869e139a373fdf664a27a6c6dbebb60405160405180910390a2600067ffffffffffffffff8111156104a1576104a0610e65565b5b6040519080825280602002602001820160405280156104cf5781602001602082028036833780820191505090505b50600190805190602001906104e59291906109ec565b50505050565b6104f361088c565b6104fd6000610920565b565b6060600180548060200260200160405190810160405280929190818152602001828054801561058357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610539575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600354905090565b600281815481106105d057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061060961058d565b4260405160200161061b929190610efd565b6040516020818303038152906040528051906020012060001c905090565b606060028054806020026020016040519081016040528092919081815260200182805480156106bd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610673575b5050505050905090565b60035481565b662386f26fc10000341015610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90610f86565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fc16481c9484122696a660b57df0bf6839645c6b620cb1704ac2437de13be9225346040516107c09190610aac565b60405180910390a2565b6107d261088c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890611018565b60405180910390fd5b61084a81610920565b50565b6001818154811061085d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108946109e4565b73ffffffffffffffffffffffffffffffffffffffff166108b261058d565b73ffffffffffffffffffffffffffffffffffffffff1614610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90611084565b60405180910390fd5b565b6000818361091891906110d3565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054828255906000526020600020908101928215610a65579160200282015b82811115610a645782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a0c565b5b509050610a729190610a76565b5090565b5b80821115610a8f576000816000905550600101610a77565b5090565b6000819050919050565b610aa681610a93565b82525050565b6000602082019050610ac16000830184610a9d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1e82610af3565b9050919050565b610b2e81610b13565b82525050565b6000610b408383610b25565b60208301905092915050565b6000602082019050919050565b6000610b6482610ac7565b610b6e8185610ad2565b9350610b7983610ae3565b8060005b83811015610baa578151610b918882610b34565b9750610b9c83610b4c565b925050600181019050610b7d565b5085935050505092915050565b60006020820190508181036000830152610bd18184610b59565b905092915050565b6000610be482610af3565b9050919050565b610bf481610bd9565b82525050565b6000602082019050610c0f6000830184610beb565b92915050565b600080fd5b610c2381610a93565b8114610c2e57600080fd5b50565b600081359050610c4081610c1a565b92915050565b600060208284031215610c5c57610c5b610c15565b5b6000610c6a84828501610c31565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ca881610bd9565b82525050565b6000610cba8383610c9f565b60208301905092915050565b6000602082019050919050565b6000610cde82610c73565b610ce88185610c7e565b9350610cf383610c8f565b8060005b83811015610d24578151610d0b8882610cae565b9750610d1683610cc6565b925050600181019050610cf7565b5085935050505092915050565b60006020820190508181036000830152610d4b8184610cd3565b905092915050565b610d5c81610bd9565b8114610d6757600080fd5b50565b600081359050610d7981610d53565b92915050565b600060208284031215610d9557610d94610c15565b5b6000610da384828501610d6a565b91505092915050565b610db581610b13565b82525050565b6000602082019050610dd06000830184610dac565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e1082610a93565b9150610e1b83610a93565b925082610e2b57610e2a610dd6565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008160601b9050919050565b6000610eac82610e94565b9050919050565b6000610ebe82610ea1565b9050919050565b610ed6610ed182610bd9565b610eb3565b82525050565b6000819050919050565b610ef7610ef282610a93565b610edc565b82525050565b6000610f098285610ec5565b601482019150610f198284610ee6565b6020820191508190509392505050565b600082825260208201905092915050565b7f4d696e20616d6f756e7420697320302e30312065746865720000000000000000600082015250565b6000610f70601883610f29565b9150610f7b82610f3a565b602082019050919050565b60006020820190508181036000830152610f9f81610f63565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611002602683610f29565b915061100d82610fa6565b604082019050919050565b6000602082019050818103600083015261103181610ff5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061106e602083610f29565b915061107982611038565b602082019050919050565b6000602082019050818103600083015261109d81611061565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110de82610a93565b91506110e983610a93565b9250828201905080821115611101576111006110a4565b5b9291505056fea2646970667358221220e1ccad6ad84cd1bc880c31397e6677014d3474c9fc14f003ec469e009a4859fb64736f6c63430008120033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Lottery> {
    return super.deploy(overrides || {}) as Promise<Lottery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  override connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
